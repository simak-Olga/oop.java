пакет урока 1;
public class interface train {
    частный строковый маршрут;
    публичный movement;

    пустотная нагрузка() {
        Система. вон. println("люди едут в поезде");
    }

    публичная строка getRoute() {
        обратный маршрут;
    }

    public void setRoute(String route)) {
        это. маршрут = маршрут;
    }
   
    @Перекрыть
    пустотная нагрузка() {
        Система. вон. println("поезд перевозит людей по маршруту");

        Предикат<Train> isTransport = x -> x. getRoute(). равно("поезд");
            Транспорт<поезд> маршрутИнфо = x -> система. вон. println(x. getмаршрут());
            Поставщик<транспорт> Создатьмаршрут поезда = () -> {
                Сканирование сканера  =  новый сканер (система. в);
                Система. вон. print("Введите номер поезда: ");
                Имя строки  = сканирование. следующаяЛиния();
                Система. вон. print("Введите класс поезда: ");
                Целочисленный номер = сканирование. следующаяИнт();
                Система. вон. print("Международный/внутренний поезд: ");
                Строка Numroute  = сканирование. следующаяЛиния();
                Система. вон. print("Введите номер маршрута: ");
                Состояние строки = сканирование. следующий();
                переключатель (состояние)) {
                    кейс "поезд":
                        вернуть новый поезд (номер, класс, международный/внутренний);
                    кейс "транспорт":
                        вернуть новый транспорт(номер, класс, международный/внутренний);
                    
                }
                вернуть новый транспорт (номер, класс, международный/внутренний);
            };
    
    
            Поезд = созданиеПоезд. Получить();
            Создатьмаршрут поезда. принять(поезд);
            Система. вон. println(isTrain. тест (поезд));
    }

   }
